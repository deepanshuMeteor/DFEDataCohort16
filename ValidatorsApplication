FINAL app.py:

from flask import Flask, render_template
from flask_wtf import FlaskForm
from wtforms import StringField,SubmitField
from wtforms.validators import DataRequired, Length, ValidationError

app = Flask(__name__)

app.config["SECRET_KEY"]="SOME_KEY"

class UserCheck:
    def __init__(self,banned, message=None):
        self.banned = banned
        if not message:
            message = "Please choose a different username"
        self.message = message

    def __call__(self, form, field):
        if field.data.lower() in (word.lower() for word in self.banned):
            raise ValidationError(self.message)
        
class myForm(FlaskForm):
    username = StringField("Username", validators=[
        DataRequired(),
        UserCheck(message="Given username is not allowed", banned=["root","admin","sys"]),
        Length(min=2,max=15)
        ])
    submit = SubmitField("Sign up")

@app.route('/', methods=["GET","POST"])
def postName():
    form = myForm()
    if form.validate_on_submit():
        username = form.username.data
        return render_template("home.html",form = form,username=username)
    else:
        return render_template("home.html",form = form,username="")

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)
    
    
    
    
    
FINAL templates/home.html:

<html>
  <head>
    <title>Add person</title>
  </head>
  <body>
    <h1>Choose a Username</h1>
    <div class="form">
            <form method="POST" action="/">
                    {{ form.hidden_tag() }}
                    {{ form.username.label }}
                    {{ form.username }}
                    {% if form.username.errors %}
                    <div class="error">
                            {% for error in form.username.errors %}
                                <span>{{ error }}</span>
                        {% endfor %}
                    </div>
                    {% endif %}
                    <br>
                    {{ form.submit }}
             </form>
    </div>
    <div>
            <p> You chose: {{ username }} </p>
    </div>
  </body>
</html>




Creating an Application with python - Linux
1. Create a Linux VM on Azure
2. Login with SSH to the VM
    1. ssh -i <private key path> azureuser@20.242.39.231
3. Install required libraries
    1. sudo apt install python3 python3-venv python3-pip
4. Start creating application - Basic App
    1. mkdir python-UI - Create a new directory
    2. Cd python-flask - changing the directory
    3. python3 -m venv venv - Create a virtual environment 
    4. source venv/bin/activate - Activate the venv
    5. pip3 install flask flask-wtf wtforms
    6. vi app.py
    7. Save file with ‘:wq’ 
        8. Mkdir templates
    9. vi templates/home.html
    10. Save file with ‘:wq’ 
    11. Test the App
            1. python3 app.py
